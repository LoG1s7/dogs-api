[tool.poetry]
name = "dogs-api"
version = "0.1.0"
description = ""
authors = ["Alexander Kolesnikov <alexkolesnikov.git@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.1.1"
djangorestframework = "^3.15.2"
psycopg2-binary = "^2.9.9"
django-environ = "^0.11.2"
ruff = "^0.6.8"
gunicorn = "^23.0.0"
faker = "^30.1.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    "manage.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "**/migrations/*",
    "settings.py"
]

line-length = 88
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
extend-select = ["W", "E", "I", "F"]
preview = true
ignore = [
    "ARG001", # unused-function-argument
    "ANN401", # any-type
    "B008", # function-call-in-default-argument
    "B904", # raise-without-from-inside-except
    "BLE001", # blind-except
    "CPY001", # missing-copyright-notice
    "D100", # undocumented-public-module
    "D101", # undocumented-public-class
    "D102", # undocumented-public-method
    "D103", # undocumented-public-function
    "D104", # undocumented-public-package
    "D105", # undocumented-magic-method
    "D107", # undocumented-public-init
    "D203", # one-blank-line-before-class
    "D205", # blank-line-after-summary
    "D213", # multi-line-summary-second-line
    "D401", # non-imperative-mood
    "DOC501", # docstring-missing-exception
    "FAST002", # fast-api-non-annotated-dependency
    "INP001", # implicit-namespace-package
    "RUF009", # function-call-in-dataclass-default-argument
    "S101", # assert
    "S608", # hardcoded-sql-expression
    "RUF001",
    "ANN003",
    "ANN002",
    "Q000",
    "Q003",
    "COM812",
    "ISC001",
    "RUF002",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.pylint]
max-args = 7